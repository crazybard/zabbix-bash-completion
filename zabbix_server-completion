#
#  Bash completion for zabbix_server
#

shopt -s extglob

_zabbix_server()
{
	local cur prev opts unique_opts nonunique_opts unique_opts_space nonunique_opts_space opt option
	local runtime_options config_supplied config_path pid_file parent_pid
	COMPREPLY=()
	_get_comp_words_by_ref -n = cur prev

	unique_opts="-h|--help|-V|--version"
	nonunique_opts="-c|-R|-f|--config|--runtime-control|--foreground"
	unique_opts_space=${unique_opts//|/ }
	nonunique_opts_space=${nonunique_opts//|/ }

	opts=" $unique_opts_space $nonunique_opts_space "
	for (( i=1; i<=$[${#COMP_WORDS[@]}-1]; ++i )) ; do
		opt=${COMP_WORDS[$i]}
		[[ $config_supplied ]] && {
			config_path=$opt
			unset config_supplied
			continue
		}
		[[ $opt =~ --*[hvVcRrf].* ]] && {
			option=$opt
		} || {
			continue
		}
		# if a unique option has been supplied, do not offer any other options
		[[ $option == @($unique_opts) ]] && {
			return 1
		}
		# if a non-unique option has been supplied, remove all unique options and already used options
		[[ $option == @($nonunique_opts) ]] && opts="${opts/$unique_opts_space/}"
		opts=${opts/ $option / }

		[[ $option == "-c" ]] && {
			config_supplied=yes
		}

		# remove alternatives
		case $option in
			-R)                opts="${opts/ --runtime-control/}" ;;
			--runtime-control) opts="${opts/ -R/}" ;;
			-c)                opts="${opts/ --config/}" ;;
			--config)          opts="${opts/ -c/}" ;;
		esac
	done
	case "${prev}" in
		-@(c|-config))
			compopt -o default
			COMPREPLY=()
			return 0
			;;
		-@(R|-runtime-control))
			_zabbix-daemons-runtime "$cur" server $1
			return 0
			;;
		*)
			;;
	esac

	COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
}
complete -F _zabbix_server zabbix_server
